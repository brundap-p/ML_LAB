#GMM

import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.mixture import GaussianMixture
from sklearn.metrics import silhouette_score
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv("/content/Mall_Customers.csv")
print(data)

df = pd.DataFrame(data)
print(df)

df.info()
df.describe()
df.head()
df.tail()
df.isna().sum()
df.isnull().sum()
df.shape

# Selecting the features for clustering
X = df[['Annual Income (k$)', 'Spending Score (1-100)', 'Age']]

# Scaling the features to standardize the data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Fit the Gaussian Mixture Model (GMM)
gmm = GaussianMixture(n_components=2, random_state=42)  # You can adjust the number of clusters
gmm.fit(X_scaled)
clusters = gmm.predict(X_scaled)

# Calculate the silhouette score
score = silhouette_score(X_scaled, clusters)
print("Silhouette Score:", score)

# Silhouette scores for different numbers of clusters (2 to 10)
silhouette_scores_list = []
n_clusters_range = range(2, 11)
for n_clusters in n_clusters_range:
    gmm = GaussianMixture(n_components=n_clusters, random_state=42)
    gmm.fit(X_scaled)
    clusters = gmm.predict(X_scaled)
    score = silhouette_score(X_scaled, clusters)
    silhouette_scores_list.append(score)

print("Silhouette Scores for different numbers of clusters:", silhouette_scores_list)

# Plot silhouette score vs. number of clusters
plt.figure(figsize=(10, 6))
plt.plot(n_clusters_range, silhouette_scores_list, marker="o")
plt.xlabel("Number of Clusters")
plt.ylabel("Silhouette Score")
plt.title("Silhouette Score vs. Number of Clusters")
plt.grid(True)
plt.show()

# Fit GMM with optimal number of clusters (here we take 5 based on the plot)
optimal_n_components = 6
gmm = GaussianMixture(n_components=optimal_n_components, random_state=42)
clusters = gmm.fit_predict(X_scaled)

# Add cluster labels to the DataFrame
df["Cluster"] = clusters

# Visualizing the clustering with scatter plot
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x="Annual Income (k$)", y="Spending Score (1-100)", hue="Cluster", palette="viridis", s=100)
plt.title("GMM Clustering on Mall Customer Dataset")
plt.xlabel("Annual Income (k$)")
plt.ylabel("Spending Score (1-100)")
plt.show()
